// Code generated by go-swagger; DO NOT EDIT.

package token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/craguilar/cidm/models"
)

// GetUserPermissionOKCode is the HTTP code returned for type GetUserPermissionOK
const GetUserPermissionOKCode int = 200

/*GetUserPermissionOK successful operation

swagger:response getUserPermissionOK
*/
type GetUserPermissionOK struct {

	/*
	  In: Body
	*/
	Payload models.GetUserPermissionOKBody `json:"body,omitempty"`
}

// NewGetUserPermissionOK creates GetUserPermissionOK with default headers values
func NewGetUserPermissionOK() *GetUserPermissionOK {
	return &GetUserPermissionOK{}
}

// WithPayload adds the payload to the get user permission o k response
func (o *GetUserPermissionOK) WithPayload(payload models.GetUserPermissionOKBody) *GetUserPermissionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user permission o k response
func (o *GetUserPermissionOK) SetPayload(payload models.GetUserPermissionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserPermissionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetUserPermissionOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetUserPermissionUnauthorizedCode is the HTTP code returned for type GetUserPermissionUnauthorized
const GetUserPermissionUnauthorizedCode int = 401

/*GetUserPermissionUnauthorized Authentication information is missing or invalid

swagger:response getUserPermissionUnauthorized
*/
type GetUserPermissionUnauthorized struct {
	/*
	  Required: true
	*/
	WWWAuthenticate string `json:"WWW_Authenticate"`
}

// NewGetUserPermissionUnauthorized creates GetUserPermissionUnauthorized with default headers values
func NewGetUserPermissionUnauthorized() *GetUserPermissionUnauthorized {
	return &GetUserPermissionUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the get user permission unauthorized response
func (o *GetUserPermissionUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *GetUserPermissionUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the get user permission unauthorized response
func (o *GetUserPermissionUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *GetUserPermissionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
}

/*GetUserPermissionDefault Unexpected error

swagger:response getUserPermissionDefault
*/
type GetUserPermissionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserPermissionDefault creates GetUserPermissionDefault with default headers values
func NewGetUserPermissionDefault(code int) *GetUserPermissionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUserPermissionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get user permission default response
func (o *GetUserPermissionDefault) WithStatusCode(code int) *GetUserPermissionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get user permission default response
func (o *GetUserPermissionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get user permission default response
func (o *GetUserPermissionDefault) WithPayload(payload *models.Error) *GetUserPermissionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user permission default response
func (o *GetUserPermissionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserPermissionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
