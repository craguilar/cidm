// Code generated by go-swagger; DO NOT EDIT.

package token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/craguilar/cidm/models"
)

// AddUserPermissionOKCode is the HTTP code returned for type AddUserPermissionOK
const AddUserPermissionOKCode int = 200

/*AddUserPermissionOK successful operation

swagger:response addUserPermissionOK
*/
type AddUserPermissionOK struct {
}

// NewAddUserPermissionOK creates AddUserPermissionOK with default headers values
func NewAddUserPermissionOK() *AddUserPermissionOK {
	return &AddUserPermissionOK{}
}

// WriteResponse to the client
func (o *AddUserPermissionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
}

// AddUserPermissionUnauthorizedCode is the HTTP code returned for type AddUserPermissionUnauthorized
const AddUserPermissionUnauthorizedCode int = 401

/*AddUserPermissionUnauthorized Authentication information is missing or invalid

swagger:response addUserPermissionUnauthorized
*/
type AddUserPermissionUnauthorized struct {
	/*
	  Required: true
	*/
	WWWAuthenticate string `json:"WWW_Authenticate"`
}

// NewAddUserPermissionUnauthorized creates AddUserPermissionUnauthorized with default headers values
func NewAddUserPermissionUnauthorized() *AddUserPermissionUnauthorized {
	return &AddUserPermissionUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the add user permission unauthorized response
func (o *AddUserPermissionUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *AddUserPermissionUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the add user permission unauthorized response
func (o *AddUserPermissionUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *AddUserPermissionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
}

/*AddUserPermissionDefault Unexpected error

swagger:response addUserPermissionDefault
*/
type AddUserPermissionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserPermissionDefault creates AddUserPermissionDefault with default headers values
func NewAddUserPermissionDefault(code int) *AddUserPermissionDefault {
	if code <= 0 {
		code = 500
	}

	return &AddUserPermissionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add user permission default response
func (o *AddUserPermissionDefault) WithStatusCode(code int) *AddUserPermissionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add user permission default response
func (o *AddUserPermissionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add user permission default response
func (o *AddUserPermissionDefault) WithPayload(payload *models.Error) *AddUserPermissionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user permission default response
func (o *AddUserPermissionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserPermissionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
